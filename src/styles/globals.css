@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Yekan';
  src: url('/fonts/iranyekanwebmedium.2d4f96e5.woff');
}

.yekan_font {
  font-family: 'Yekan';
}

:root {
  --colBg: #e4e4e4;
  --colCard: #f2f2f0;
  --colTextA: #3A3878;
  --colTextB: #838AAB;
  --colTextC: #838AAB;
  --zoomControl: #3a3a3a;
  --zoomControlText: #ffffff;
  --textHover: #60a5fa;
  --selecMarker: #99919d;
  --textTitle: #3A3878;
  --accordianTabs: #c0c8ef;
  --textBoxA: #4d9db7;
  --textBoxB: #7ec7b2;
  
}

.dark {

  --colBg: #1F2E35;
  --colCard: #22343C;
  --colTextA: #ececec;
  --colTextB: #b7b7b7;
  --colTextC: #6a6a6a;
  --zoomControl: orange;
  --zoomControlText: #ffffff;
  --textHover: orange;
  --selecMarker: #eae1e1;
  --textTitle: orange;
  --accordianTabs: #64748b;
  --textBoxA: #155e75;
  --textBoxB: #92ffab66;
}


body {
  font-size: 14px;
  color: var(--colTextA);
  background: var(--colBg);
  transition: all ease-in-out 300ms;
}

.leaflet-control-attribution {
  display: none !important;
}

.leaflet-control-zoom-out {
  border-radius: 50% !important;
  background-color: var(--colBg) !important;
  color: var(--colTextA) !important;
  border: 1px solid var(--colTextA) !important;
}

.leaflet-control-zoom-in {
  border-radius: 50% !important;
  background-color: var(--colBg) !important;
  color: var(--colTextA) !important;
  border: 1px solid var(--colTextA) !important;
}

.leaflet-touch .leaflet-bar {
  border: none !important;
  display: flex !important;
  gap: 5px !important;
  flex-direction: row-reverse !important;
}


/* Chart styles */

.apexcharts-yaxis-label,
.apexcharts-xaxis-label {
  fill: var(--colTextB) !important;
}

.apexcharts-tooltip,
.apexcharts-tooltip-title {
  background-color: var(--colCard) !important;
}


/* map markers */

.blinking-circle-active {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #1ac11a;
  animation: blink 1s infinite;
  position: relative;
  z-index: 9999999999;
}

.locMarker {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #1a76c1;
}


.blinking-circle-deactive {
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #ff0000;
  animation: blink 1s infinite;
}

@keyframes blink {
  0% {
    opacity: 1;
  }

  50% {
    opacity: 0.4;
  }

  100% {
    opacity: 1;
  }
}




.selected-marker {
  position: relative;
  transform: scale(1.2);
}



.selected-marker.active::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  border: 2px solid #1ac11a;
  filter: drop-shadow(0 0 2px #1ac11a) drop-shadow(0 0 4px #1ac11a);
  animation: pulseNeon 1.0s ease-in-out infinite;
  z-index: -1;
}


.selected-marker.inactive::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  border: 2px solid #ff0000;
  filter: drop-shadow(0 0 2px #ff0000) drop-shadow(0 0 4px #ff0000);
  animation: pulseNeon 1.0s ease-in-out infinite;
  z-index: -1;
}

@keyframes pulseNeon {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  50% {
    transform: scale(2.5);
    opacity: 0.6;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.apexcharts-text {
  font-family: inherit !important;
}

.apexcharts-legend-text {
  color: inherit !important;
}


/* other */


.linkHover {
  transition: all 500ms ease-in-out;
}

.linkHover:hover {
  transform: scale(1.03);
}


/* rtl */

.rtl {
  direction: rtl;
}

.ltr {
  direction: ltr;
}





.btnHover {
  transition: all 500ms ease-in-out;
}

.btnHoverNoBroder {
  transition: all 500ms ease-in-out;
}

.btnHover:hover {
  transform: scale(1.03);
  border-color: var(--textHover);
  color: var(--textHover);
}

.btnHoverNoBroder:hover {
  transform: scale(1.03);
  color: var(--textHover);
}

input {
  background: none;
  outline: none;
  border: none;
}


.simplebar-scrollbar:before {
  background: var(--colTextB);
  border-radius: 10px;
}

.simplebar-track.simplebar-vertical {
  width: 8px;
}

.react-resizable-handle.react-resizable-handle-se {
  opacity: 0;
}


.textJust {
  text-align: justify;
  text-justify: inter-word;
}



@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.cardborder,
.activeBorder {
  box-sizing: border-box;
  position: relative;
}

.cardborder::after,
.cardborder::before {
  content: '';
  position: absolute;
  height: 100%;
  width: 100%;
  box-sizing: content-box;
  background-image: conic-gradient(from var(--angle), var(--textHover), transparent, transparent, transparent, var(--textHover));
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  z-index: -1;
  padding: 2px;
  border-radius: 15px;
  animation: 3s spinborder linear infinite;
}

.cardborder::before {
  filter: blur(1.5rem);
  opacity: 0.5;
}


.activeBorder::after,
.activeBorder::before {
  content: '';
  position: absolute;
  height: 100%;
  width: 100%;
  box-sizing: content-box;
  background-image: conic-gradient(from var(--angle), #67b967, transparent, transparent, #67b967);
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  z-index: -1;
  padding: 2px;
  border-radius: 15px;
  animation: 3s spinborder linear infinite;
}

.activeBorder::before {
  filter: blur(5px);
  opacity: 0.5;
}



@keyframes spinborder {
  from {
    --angle: 0deg;
  }

  to {
    --angle: 360deg;
  }
}

.inner-shadow {
  box-shadow: inset 0 8px 8px -10px rgba(0, 0, 0, 0.3),
    /* بالا */
    inset 0 -8px 8px -10px rgba(0, 0, 0, 0.3),
    /* پایین */
    inset 8px 0 8px -10px rgba(0, 0, 0, 0.3),
    /* راست */
    inset -8px 0 8px -10px rgba(0, 0, 0, 0.3);
  /* چپ */
}



.absoluteCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%);
  transform: translateY(-50%);
}

/* .simplebar-content-wrapper {
  overflow: visible !important;
} */

.react-flow__minimap {
  background-color: var(--colBg);
  border-radius: 10px;
  overflow: hidden;
  height: 120px;
}

.react-flow__edge-path {
  stroke: var(--colTextA) !important;
  stroke-width: 1;
  /* اگه خواستی ضخامت هم زیاد شه */
}

.react-flow__controls {
  background-color: var(--colBg) !important;
}

.react-flow__controls button {
  background-color: var(--colBg) !important;
  border: none !important;
  color: var(--colTextB) !important; /* اگه می‌خوای آیکون‌ها سفید شن */
}